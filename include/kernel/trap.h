#ifndef INC_TRAP_H_
#define INC_TRAP_H_

/** Executable segment */
#define STA_X		0x8
/** Expand down (non-executable segments) */
#define STA_E		0x4
/** Conforming code segment (executable only) */
#define STA_C		0x4
/** Writeable (non-executable segments) */
#define STA_W		0x2
/** Readable (executable segments) */
#define STA_R		0x2
/** Accessed */
#define STA_A		0x1

/** Available 16-bit TSS */
#define STS_T16A	0x1
/** Local Descriptor Table */
#define STS_LDT		0x2
/** Busy 16-bit TSS */
#define STS_T16B	0x3
/** 16-bit Call Gate */
#define STS_CG16	0x4
/** Task Gate / Coum Transmitions */
#define STS_TG		0x5
/** 16-bit Interrupt Gate */
#define STS_IG16	0x6
/** 16-bit Trap Gate */
#define STS_TG16	0x7
/** Available 32-bit TSS */
#define STS_T32A	0x9
/** Busy 32-bit TSS */
#define STS_T32B	0xB
/** 32-bit Call Gate */
#define STS_CG32	0xC
/** 32-bit Interrupt Gate */
#define STS_IG32	0xE
/** 32-bit Trap Gate */
#define STS_TG32	0xF

/* Global descriptor numbers */
/** kernel text */
#define GD_KT     0x08
/** kernel data */
#define GD_KD     0x10
/** user text */
#define GD_UT     0x18
/** user data */
#define GD_UD     0x20
/** Task segment selector */
#define GD_TSS    0x28

/* processor defined traps numbers : */
/** divide error */
#define T_DIVIDE     0
/** debug exception */
#define T_DEBUG      1
/** non-maskable interrupt */
#define T_NMI        2
/** breakpoint */
#define T_BRKPT      3
/** overflow */
#define T_OFLOW      4
/** bounds check */
#define T_BOUND      5
/** illegal opcode */
#define T_ILLOP      6
/** device not available */
#define T_DEVICE     7
/** double fault */
#define T_DBLFLT     8
/* reserved (not generated by recent processors) */
#define T_COPROC     9
/** invalid task switch segment */
#define T_TSS       10
/** segment not present */
#define T_SEGNP     11
/** stack exception */
#define T_STACK     12
/** general protection fault */
#define T_GPFLT     13
/** page fault */
#define T_PGFLT     14
/* reserved */
#define T_RES    15
/** floating point error */
#define T_FPERR     16
/** aligment check */
#define T_ALIGN     17
/** machine check */
#define T_MCHK      18
/** SIMD floating point error */
#define T_SIMDERR   19

/** syscall */
#define T_SYSCALL 0x80

/* IRQ 0 corresponds to int T_IRQ */
#define T_IRQ0          32

#define IRQ_OFFSET 32
#define IRQ_TIMER        0
#define IRQ_KBD          1
#define IRQ_COM1         4
#define IRQ_IDE         14
#define IRQ_ERROR       19
#define IRQ_SPURIOUS    31


#endif /* INC_TRAP_H_ */
